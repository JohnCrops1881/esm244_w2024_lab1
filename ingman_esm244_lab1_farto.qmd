---
title: "ingman_esm244_lab1"
author: "Gabe Ingman"
format: 
  html:
    code-fold: true
    toc: true
execute: 
  echo: true
  message: false
  warning: false
editor: visual
---

---

library(tmap)

```{r setup}

#install.packages('sf')
#install.packages('tmap')
#install.packages('htmltools')
#install.packages('dplyr')
#install.packages('forcats')
#install.packages('stringr')

library(tidyverse)
library(here)
library(sf)
library(tmap)
library(janitor)
library(dplyr)
library(ggplot2)
library(forcats)


```

```{r}
sfo_trees_df <- read.csv(here('data', 'sfo_trees', 'sfo_trees.csv')) %>%
  janitor::clean_names()
```

### Example 1

Find counts of observations by 'legal_status', then select the statuses with the five highest tree counts.

group by legal status, and arrange each observation into its own variable column so counts are separate

summarize by tree count

```{r example1code}

sfo_trees_df %>%
  group_by(legal_status) %>%
  summarize(tree_count = n())

top_5_status <- sfo_trees_df %>%
  filter(!is.na(legal_status)) %>% # remove the n/a observations, only find numbers
  group_by(legal_status) %>%
  summarize(tree_count = n()) %>%
  ungroup() %>% # ungroup to avoid weird business
  slice_max(tree_count, n = 5) # filter out the top 5 observations
```

```{r plottingdata}
ggplot(top_5_status, 
       aes(x= fct_reorder(legal_status, tree_count), 
        y= tree_count)) +
  geom_col() +
  coord_flip() +
  theme_minimal()

```

### Example 2

Only keep observations where legal status is 'Permitted Site' and caretaker is 'MTA' or 'DPW'. Store as 'permitted_mta_dpw'.

```{r}
permitted_mta_dpw <- sfo_trees_df %>%
  filter(legal_status %in% 'Permitted Site' & caretaker %in% c('MTA', 'DPW'))
```

### Example 3

Only keep observations of oak and pine trees then only keep columns of 'species', 'legal_status', 'plant_date', and 'latitude' and 'longitude'.

```{r}
oak_pine_df <- sfo_trees_df %>%
  filter(str_detect(species, "Oak") | str_detect(species, "Pine")) %>%
  select(species, legal_status, plant_date, latitude, longitude) %>%
    mutate(type = ifelse(str_detect(species, 'Oak'), 'oak', 'pine'))
```

```{r graphing}
ggplot(data = oak_pine_df, aes(x = longitude, y = latitude, color = type)) + 
  geom_point() +
  theme_minimal() +
  theme(axis.title = element_blank()) +
  labs(color = 'Tree type', 
       caption = 'Locations of Oaks and Pines in San Francisco')
```

### Example 4

```{r}
ca_native_df <- read.csv(here('data/sfo_trees/ca_native_spp.csv'))
```

```{r}
sfo_trees_native <- sfo_trees_df %>%
  separate(species, into = c('spp_sci', 'spp_common'), sep = ' :: ') %>%
  select(starts_with('spp'), 'plant_date', 'legal_status', 'latitude', 'longitude') %>%
  mutate(ca_native = (spp_sci %in% ca_native_df$scientific_name))

```

```{r}
sfo_native_status <- sfo_trees_native %>%
  group_by(legal_status, ca_native) %>%
  summarize(n_trees = n(),
            n_species = n_distinct(spp_sci))
```
